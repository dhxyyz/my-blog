##lodash之array

学习javascript已经有一段时间了，其中用到了好多数组数组，在数组的运算中，经常要把
数组遍历，才能进行运算，运用起来十分麻烦。今天来介绍一些关于数组的的一些方法。

在一个数组中，要把几个元素分开，平均分成若干份，若是按照普通方法就要先给查看其长
度，计算等分够没份长度是多少，然后遍历数组，再进行等分。这样的话，就要写好多代码
，任务两太大，还容易出错。但是运用array的方法就可以减少很多代码来那个。例如

_.chunk(['a', 'b', 'c', 'd'], 2);
// → [['a', 'b'], ['c', 'd']]

运用一行代码就能够实现数组的等分。代码中的数字2，就是将数组分成长度为2的小分段。
如果不平均的话，剩下的为最后一部分。例如

_.chunk(['a', 'b', 'c', 'd'], 3);
  // → [['a', 'b', 'c'], ['d']]

_.compact是将数组中为假的部分删除。例如

_.compact([0, 1, false, 2, '', 3]);
// → [1, 2, 3]

数组中，删除一个数组中与另外一个数组相同的数组时候，用_.difference的话会相当的简
单。使用方法如下：

_.difference([1, 2, 3], [4, 2]);
// → [1, 3]

若想要删除一个数组中前面几个元素，或者后面几个元素的话，分别使用_.drop和_.dropRight
即可完成。例如

_.drop([1, 2, 3]);
// → [2, 3]

_.drop([1, 2, 3], 2);
// → [3]

_.drop([1, 2, 3], 5);
// → []

_.drop([1, 2, 3], 0);
// → [1, 2, 3]

删除后面几个元素

_.dropRight([1, 2, 3]);
// → [1, 2]

_.dropRight([1, 2, 3], 2);
// → [1]

_.dropRight([1, 2, 3], 5);
// → []

_.dropRight([1, 2, 3], 0);
// → [1, 2, 3]

在一个嵌套的数组中，想要获取其中的元素就相当的麻烦，使用方法_.flatten就会及其简
单了。只需要在数组前面加一个_.flatten即可。例如

_.flatten([1, [2, 3, [4]]]);
// → [1, 2, 3, [4]]
去掉一层嵌套。


_.flatten([1, [2, 3, [4]]], true);
// → [1, 2, 3, 4]
加一个true就可以去掉所有的嵌套了。

关于lodash的array方法还有很多，这里就简单介绍几个，在以后的学习中还会遇到很多，
用的多了，在写代码的时候就会简单很多。
